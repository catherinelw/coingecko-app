import React, { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import CoinGecko from "coingecko-api";
import styles from "../styles/Home.module.css";
import "bootstrap/dist/css/bootstrap.min.css";
import Search from "./layout/components/Search";
import axios from "axios";

const CoinGeckoClient = new CoinGecko();

export default function Volume(props) {
  const { data } = props.result;
  const [totalVolume, setTotalVolume] = useState("");
  const [name, setName] = useState("");
  const [image, setImage] = useState(null);
  const [coin, setCoin] = useState({});
  const [error, setError] = useState(false);
  const searchCoins = async (text) => {
    try {
      const res = await axios.get(
        `https://api.coingecko.com/api/v3/coins/${text.toLowerCase()}`
      );
      setCoin(res.data);
      setName(res.data.name);
      setImage(res.data.image.thumb);
      setTotalVolume(res.data.market_data.total_volume.aud);
      setError(false);
    } catch (error) {
      setError(true);
    }
  };
  return (
    <div className={styles.volumeContainer}>
      <Head>
        <title>CoinGecko App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <div>
          <Link href="/">
            <a className={styles.link}>Home</a>
          </Link>
          <Link href="/volume">
            <a className={styles.link}>Volume</a>
          </Link>
        </div>
      </header>
      <h1>CoinGecko App</h1>
      <Search searchCoins={searchCoins} />
      {error ? (
        <div className={styles.alert}>Please enter a correct name</div>
      ) : (
        <table className="table">
          <thead>
            <tr>
              <th>Symbol</th>
              <th>Name</th>
              <th>Total Volume</th>
            </tr>
          </thead>
          <tbody>
            <td>
              <img
                src={image}
                style={{ width: 40, height: 40, marginRight: 10 }}
              />
            </td>
            <td>{name}</td>
            <td>{totalVolume}</td>
          </tbody>
        </table>
      )}
    </div>
  );
}

export async function getServerSideProps(context) {
  const params = {
    order: CoinGecko.ORDER.VOLUME_ASC,
  };
  const result = await CoinGeckoClient.coins.markets({ params });
  return {
    props: {
      result,
      loading: false,
    },
  };
}
